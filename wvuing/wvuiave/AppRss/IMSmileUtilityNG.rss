/*
* Copyright (c) 2002 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  This file contains all the resources for the Instant Messanger's
*                SmileUtility.
*
*/



#include "IMSmileUtilityNG.hrh"
#include "IMSmileUtilityNG.rh"
#include <chatNG.mbg>

RESOURCE IM_SMILE_ARRAY r_smile_array_resource
    {
    smiles =
        {
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_happy;
            mask_id = EMbmChatngQgn_prop_im_smileys_happy_mask;
            strings = { LBUF { txt = ":-)"; },
                    LBUF { txt = ":)"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_sad;
            mask_id = EMbmChatngQgn_prop_im_smileys_sad_mask;
            strings = { LBUF { txt = ":-("; },
                    LBUF { txt = ":("; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_laugh;
            mask_id = EMbmChatngQgn_prop_im_smileys_laugh_mask;
            strings = { LBUF { txt = ":-D"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_wink;
            mask_id = EMbmChatngQgn_prop_im_smileys_wink_mask;
            strings = { LBUF { txt = ";-)"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_kiss;
            mask_id = EMbmChatngQgn_prop_im_smileys_kiss_mask;
            strings = { LBUF { txt = ":-x"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_angry;
            mask_id = EMbmChatngQgn_prop_im_smileys_angry_mask;
            strings = { LBUF { txt = "X-("; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_bored;
            mask_id = EMbmChatngQgn_prop_im_smileys_bored_mask;
            strings = { LBUF { txt = ":oI"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_crying;
            mask_id = EMbmChatngQgn_prop_im_smileys_crying_mask;
            strings = { LBUF { txt = ":'("; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_glasses;
            mask_id = EMbmChatngQgn_prop_im_smileys_glasses_mask;
            strings = { LBUF { txt = "8-]"; } };
            },        
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_indif;
            mask_id = EMbmChatngQgn_prop_im_smileys_indif_mask;
            strings = { LBUF { txt = ":-I"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_robot;
            mask_id = EMbmChatngQgn_prop_im_smileys_robot_mask;
            strings = { LBUF { txt = "[:]"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_shock;
            mask_id = EMbmChatngQgn_prop_im_smileys_shock_mask;
            strings = { LBUF { txt = "8-)"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_skeptical;
            mask_id = EMbmChatngQgn_prop_im_smileys_skeptical_mask;
            strings = { LBUF { txt = ":-/"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_sleepy;
            mask_id = EMbmChatngQgn_prop_im_smileys_sleepy_mask;
            strings = { LBUF { txt = "|-I"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_sunglasses;
            mask_id = EMbmChatngQgn_prop_im_smileys_sunglasses_mask;
            strings = { LBUF { txt = "B-)"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_surprise;
            mask_id = EMbmChatngQgn_prop_im_smileys_surprise_mask;
            strings = { LBUF { txt = "8-O"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_tired;
            mask_id = EMbmChatngQgn_prop_im_smileys_tired_mask;
            strings = { LBUF { txt = "I-)"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_veryhappy;
            mask_id = EMbmChatngQgn_prop_im_smileys_veryhappy_mask;
            strings = { LBUF { txt = ":-]"; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_verysad;
            mask_id = EMbmChatngQgn_prop_im_smileys_verysad_mask;
            strings = { LBUF { txt = ":-["; } };
            },
        IM_SMILE
            {
            icon_id = EMbmChatngQgn_prop_im_smileys_wickedsmile;
            mask_id = EMbmChatngQgn_prop_im_smileys_wickedsmile_mask;
            strings = { LBUF { txt = ":->"; } };
            }
        };
    }
    
//  RESOURCE DEFINITIONS 

RESOURCE DIALOG r_select_smile_dialog
    {
	flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
	buttons = R_AVKON_SOFTKEYS_SELECT_CANCEL__SELECT;
	items=
		{
		DLG_LINE 
			{
			type = EAknCtPopupHeadingPane;
			id = EIMIdSelectSmileLabel;
			control = AVKON_HEADING
				{
				label = qtn_chat_conv_smiley;
				headinglayout = R_AVKON_SCT_LIST_HEADING_PANE;
				};
			},
		DLG_LINE
			{
			type = EIMCtrlSelectSmileGrid;
			id = EIMIdSelectSmileGrid;
			}
		};
	}
	
// End of File
